name: Production Build & Deploy

env:
  AZURE_WEBAPP_NAME: jmslgithubwebapp    # Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: './publish_output_prod'  # Path for the published app
  ROOT_PATH: './'     
  DOTNET_VERSION: '8.0.x'  # .NET Core version to use

on:
  workflow_dispatch:  # Enables manual dispatching of the workflow
  workflow_call:
    secrets:
      JMSLGITHUBWEBAPP_PUBLISH_PROFILE:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ${{ env.ROOT_PATH }}

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        working-directory: ${{ env.ROOT_PATH }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app-prod-${{ github.run_id }}  # Unique artifact name using run ID
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
  deploy_dev:
    name: Production
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app-prod-${{ github.run_id }}  # Matches the unique artifact name
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.JMSLGITHUBWEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
